Despite having made a lot of progress, there's still tons of work to do!

* Update README + add bibliographic refs.

* Generally: think about mux behavior!
  It seems both the simulator and Caillou.NetlistGen assume
  mux(a,b,c) = if a=1 then b else c.
  Is that the right thing to do?
  Make sure conventions are consistent across the board!

* In the simulator:
  * cleanup code, and prettify (using stylish-haskell?).
    the code should always be clean before committing!
  * synchronize with real-time clock
  * display time

* In the processor (hardware-level)
  * add special-purpose operations (mod60, etc.) in ALU
    (don't use LUTs, use combinational circuits!)
    + corresponding control signals
  * handle output signals for synchronization + display
  * tweak parameters to fit requirements from the microprogram
  * Fix the problem about readtemp

* Microcode-level:
  * Code a microassembler (Haskell EDSL?)
        -> TODO : DispatchOn...
  * Write microprogram
  * ???
  * Profit!

* Netlist compilation + hot code swapping?
  * This seems to be in limbo for now...

